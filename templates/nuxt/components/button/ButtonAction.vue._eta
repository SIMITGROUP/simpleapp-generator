<template>
  <ButtonDefault v-if="!actionName" :animate="animate">
    <i :class="getIcon()" /><slot></slot>def</ButtonDefault
  >
  <ButtonPrimary
    v-else-if="['create', 'update', 'confirm'].includes(actionName)"
    :animate="animate"
  >
    <i :class="getIcon()" />
    <slot></slot
  ></ButtonPrimary>

  <ButtonDanger
    v-else-if="['delete', 'void'].includes(actionName)"
    :animate="animate"
  >
    <i :class="getIcon()" />
    <slot></slot>
  </ButtonDanger>
  <ButtonWarning v-else-if="['draft'].includes(actionName)" :animate="animate">
    <i :class="getIcon()" />
    <slot></slot>
  </ButtonWarning>
  <ButtonSecondary v-else-if="actionName == 'print'">
    <i :class="getIcon()" />
    <slot></slot
  ></ButtonSecondary>
  <ButtonDefault v-else :animate="animate">
    <i :class="getIcon()" />
    <slot></slot
  ></ButtonDefault>
</template>
<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization. It is changable.
 * --remove-this-line-to-prevent-override--
 * last change 2024-03-01
 * author: Ks Tan
 */

const props = defineProps<{ actionName?: string; animate?: boolean }>();
const getIcon = () => {
  let cssname = "mr-1 pi ";
  switch (props.actionName) {
    case "create":
    case "update":
      cssname += "pi-save";
      break;
    case "delete":
      cssname += "pi-trash";
      break;
    case "print":
      cssname += "pi-file-pdf";
      break;
    case "confirm":
      cssname += "pi-check";
      break;
    case "void":
      cssname += "pi-file-excel";
      break;
    case "draft":
      cssname += "pi-file-edit";
      break;
  }
  return cssname;
};
</script>
