<template>
  <div class="cursor-pointer flex items-center" @click="toggleTenantList">
    <!-- <div class="flex items-center justify-center bg-blue-500 text-white rounded-full w-10 h-10 font-semibold">
      {{ orgInitials }}
    </div> -->
    <!-- <ImageOrganization :size="10"/> -->
    <div class="flex flex-col ml-3">
      <TextMain class="text-sm font-medium truncate">{{ orgName }}</TextMain>
      <div class="flex items-center gap-1">
        <IconBriefcase class="w-3 h-3" />
        <TextBold class="text-xs font-medium">{{ branchCode }}</TextBold>
      </div>
    </div>
    <i class="pi pi-chevron-down ml-3" />
    <!-- <LazyTenantCreator
      v-model:model-value="visibleCreateTenant"
    /> -->
    <Popover
      ref="tenantpanel"
      class="max-h-80 overflow-y-auto min-w-[56rem]"
      pt:content="flex flex-col "
    >
      <div class="flex flex-row justify-between mb-3 w-full px-2">
        <Button @click="showCreateTenant">
          {{ t("newBusiness") }}
        </Button>
        <Button
          v-if="isUserProfile"
          :label="t('edit')"
          icon="pi pi-pencil"
          outlined
          @click="goSetting"
        />
      </div>
      <LazyTenantPicker />
    </Popover>
  </div>
</template>

<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization. It is changable.
 * --remove-this-line-to-prevent-override--
 * last change 2025-03-16
 * author: Ks Tan
 */
import { computed, ref } from "vue";
import { useRouter } from "vue-router";

const router = useRouter();
const visibleCreateTenant = ref(false);
const tenantpanel = ref();

const toggleTenantList = (e: MouseEvent) => {
  tenantpanel.value.toggle(e);
};

const showCreateTenant = () => {
  router.push({
    path: "/picktenant",
    query: { popup: "true" },
  });
  // visibleCreateTenant.value = true;
  tenantpanel.value.hide();
};

const goSetting = () => {
  tenantpanel.value.hide();
  goTo("organization");
};

defineProps({
  orgName: String,
  branchCode: String,
});

const isUserProfile = computed(() => {
  const group = getUserProfile().currentGroup;
  return group === "admin";
});

// Computed property to get the initials
// const orgInitials = computed(() => {
//   if (!orgName) return '';
//   return orgName
//     .split(' ')
//     .map(word => word[0])
//     .slice(0, 2) // Take only the first 2 initials
//     .join('')
//     .toUpperCase();
// });
</script>
