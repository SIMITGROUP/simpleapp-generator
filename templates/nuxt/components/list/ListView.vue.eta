<template>
    <div>
        <div v-if="withFilter" class="">
            <InputText                 
                placeholder="search" 
                v-model="searchvalue"                    
                class="w-full dark:text-white" 
                type="search" />                
        </div>
        <div class=" overflow-auto" v-if="filterlist.length>0">                        
            <ul >            
                <li v-for="(item,index) in filterlist">                    
                    <div  :class="getSelectedCSS(item)">
                        <NuxtLink :to="url ? `${url}/${item[idField]}`:undefined">
                            <slot :item="item" :index="index">
                                <div class="mr-2">{{item[titleField??'']  }}</div>
                                <div class="font font-bold text-right">{{item[subTitleField??'']}}</div>
                            </slot>
                        </NuxtLink>
                    </div>
                
                </li>
            </ul>
        </div>
        <div v-else class="p-10">            
            <div class="text-xl text-center dark:text-gray-400 border p-10" >{{ t('noDataFound')  }}</div>
        </div>
    </div>
</template>
<script setup lang="ts" generic="T extends {[key:string]:any}">
import {ref} from 'vue'
import {ListItem} from '~/types/listview'
const props = withDefaults(defineProps<{
    list:T[],
    url?:string,
    titleField?:string
    idField?:string
    subTitleField?:string
    withFilter?:boolean
}>(),{
    idField:'_id'
})
// const emit = defineEmits(['clickitem'])
const searchvalue = ref('')
const selecteditem =ref('')
const clickRow=(item:ListItem)=>{
    // emit('clickitem',item)
    // selecteditem.value = item.code
}
const filterlist =  computed(()=>{    
    const newlist =props.list.filter((item:any)=>
    {
     return   String(item[props.titleField??'']).toLowerCase().includes(searchvalue.value.toLowerCase()) ||
            String(item[props.subTitleField??'']).toLowerCase().includes(searchvalue.value.toLowerCase())
    }) 

    return newlist
})
const getSelectedCSS= (item:T)=>{
    if(selecteditem.value == item.code){
        return "p-2 border-l-none border-r-none bg-sky-200 border-t-2"
    }else{
        return "p-2 border-l-none border-r-none hover-list-primary border-t-2 dark:border-t-gray-700"
    }

}

</script>