<template>
  <DataTable
    ref="documentlisttable" 
    v-bind="$attrs"
    stripedRows
    dataKey="_id"
    :showGridlines="true"
    size="small"
    :pt="{
      header: { class: '' },
      headerRow: { class: ' bg-gray-200' },
    }"
    v-on:row-click="clickRow"
    :value="value"
    :filters="filters"
    :paginator="true"
    :rows="20"
    :rowsPerPageOptions="[20, 40, 60, 100]"
  >
    <!-- header -->
    <template #header>
      <div class="flex flex-row w-full text-right justify-content-end">
        <div class="flex-1">
          <slot name="toolbar"></slot>
        </div>
        <div class="flex-1">
          <slot name="title">
            <h1 class="text text-2xl pt-2 text-center dark:text-white">
              {{ t(title) }}
            </h1>
          </slot>
        </div>
        <div class="p-input-icon-left gap-2 flex flex-row">
          <ButtonPrimary @click="exportData">
            <i class="pi pi-external-link"/>
          </ButtonPrimary>
          <InputText
            type="search"
            v-model="filters['global'].value"
            class="w-full dark:text-white text-sm"
            placeholder="Keyword Search"
          />
        </div>
      </div>
    </template>
    <!-- no data found -->
    <template #empty>
      <div class="text-center">
        <div class="text-3xl text-gray-400 pi pi-exclamation-circle"></div>
        <div class="text-3xl text-gray-400">{{ t("noDataFound") }}</div>
      </div>
    </template>
    <slot name="default">
      <Column header="undefineColumns"></Column>
    </slot>
  </DataTable>
</template>
<script setup lang="ts" generic="T">
/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2023-10-28
 * Author: Ks Tan
 */
// import { CellSetting } from "~/types";
import { FilterMatchMode } from "primevue/api";
import DataTable from "primevue/datatable";
import Column from "primevue/column";
import renderComponent from "~/components/renderer";
import { emit } from "process";
import ButtonPrimary from "../button/ButtonPrimary.vue";
const documentlisttable = ref()
const props = defineProps<{
  value: T[];
  title: string;
  columns: string[];
  uniqueKey: string;
  documentTitle: string;
}>();
const emits = defineEmits(["selectRow"]);
const clickRow = (eventdata: any) => {
  emits("selectRow", eventdata.data);
};

const exportData = ()=>{
  documentlisttable.value.exportCSV()
}
const filters = ref({
  global: { value: null, matchMode: FilterMatchMode.CONTAINS },
});
</script>
