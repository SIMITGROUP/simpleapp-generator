<script lang="ts" setup>
import Dialog from 'primevue/dialog';
import {ref} from 'vue'
import {MenuData} from '~/types'
const visible = ref(false)

// const emit = defineEmits(['select'])
const selectMenu = (menuname:{name:string,children:any}) =>{
  goTo(menuname.name)
  visible.value=false  
}


const m =  getMenustFromPageMeta()
const treemenu:any[] = []


getMenustFromPageMeta().reduce((r, item) => {
    item.split('/').reduce((o, name) => {
        var temp = (o.children = o.children || []).find(q => q.name === name);
        if (!temp) o.children.push(temp = { name });
        return temp;
    }, r);
    return r;
}, { children: treemenu })


</script>
<template>
  <div>    
    <button class="text-center border-none  cursor-pointer" v-if="getCurrentXorg()" @click="visible=true">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
      </svg>
    </button>

     <Dialog v-model:visible="visible" modal :header="t('pickDocument')" :pt="{dialog:{ class:' bg-primary-800 ' }}">
      <div class="">
          <div v-for="m in treemenu" class="m-4">
            <h3>{{ t(m.name) }}</h3>
            <div class="grid grid-cols-6 gap-4">
              <button v-for="submenu in m.children" class="border rounded-lg p-2" @click="selectMenu(submenu)">              
                {{ t(submenu.name) }}
              </button>
            </div>
            
          </div>
          
        </div>
    </Dialog>           
  </div>
</template>
<style scoped>

</style>
