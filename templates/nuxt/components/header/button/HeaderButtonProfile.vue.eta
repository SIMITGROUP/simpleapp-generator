<script setup lang="ts">
import Avatar from 'primevue/avatar';
import Dropdown from 'primevue/dropdown';
import OverlayPanel from 'primevue/overlaypanel';
import {ref} from 'vue'


const { locale,setLocale,locales } = useI18n()
const colorMode = useColorMode()

const mylocale = ref(locale)
const userprofileoverlay = ref();
const colors = [{value:'light', name:t('light')},{value:'dark', name:t('dark')}]
const toggle = (event:any) => {
    userprofileoverlay.value.toggle(event);   
}
const toProfile = ()=>{    
    userprofileoverlay.value.toggle();   

    if(getCurrentXorg()){
        navigateTo(`/${getCurrentXorg()}/profile`)
    }else{
        navigateTo(`/profile`)
    }
    
}
const toFrontpage = () =>{
    userprofileoverlay.value.toggle();   
    navigateTo('/')
}
const saveLocale=async (v:string)=>{    
    await setLocale(v)
} 



</script>

<template>          
        <div class="bg-cover bg-center rounded-md p-2 cursor-pointer profile-button"  @click="toggle">
            <img  :src="getAvatarLink(<string>getProfileEmail(),32)" alt="" class="h-full w-full overflow-hidden object-cover rounded-full border-2 border-white dark:border-gray-700 shadow" />
        </div>
    
        <OverlayPanel appendTo="body" ref="userprofileoverlay" >                    
            <!-- <div> -->
                <!-- <div class="py-2 transition duration-150 ease-in-out z-10 absolute top-0 right-0 bottom-0 left-0" id="modal"> -->
                    <div  class="">
                        <!-- <div class="relative p-4 md:p-8 bg-white dark:bg-gray-800 shadow-md rounded border border-gray-400"> -->
                            <div class="w-full flex items-center justify-start text-gray-600 dark:text-gray-400 mb-5" >
                                <div class="w-12 h-12 bg-cover bg-center rounded-md">
                                    <img :src="getAvatarLink(<string>getProfileEmail(),32)" alt="" class="h-full w-full overflow-hidden object-cover rounded-full border-2 border-white dark:border-gray-700 shadow" />
                                </div>
                                <div class="flex flex-col" >
                                    <h1 class="text-left text-gray-800 dark:text-gray-100 font-lg font-bold tracking-normal leading-tight ml-2">{{ getUserProfile()?.fullName }}</h1>
                                    <p  class="text-gray-400 dark:text-gray-100 font-normal text-base tracking-normal ml-2 mr-4">{{getUserProfile()?.group }}</p>
                                </div>
                                
                            </div>
                            <div class="col-span-full">
                                <label for="pick-lang" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-300">{{ t('language') }}</label>
                                <div class="mt-2">
                                    <Dropdown inputId="pick-lang" @update:model-value="saveLocale" v-model="mylocale" option-value="code" option-label="name" :options="locales" >                                    
                                    </Dropdown>                                   
                                </div>
                            </div>
                            <div class="mt-3 col-span-full">
                                <label for="pick-theme" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-300">{{ t('theme') }}</label>
                                <div class="mt-2">
                                    <h1>Color mode: {{ $colorMode.value }}</h1>

                                    <Dropdown inputId="pick-theme" v-model="colorMode.preference" option-value="value" option-label="name" :options="colors" >                                    
                                    </Dropdown>
                                   
                                </div>
                            </div>

                            
                            <div class="mt-3 flex items-center justify-start w-full">
                                <button class="focus:outline-none transition duration-150 ease-in-out hover:bg-gray-600 bg-gray-700 rounded text-white px-8 py-2 text-sm" @click="toProfile">{{ t('profile') }}</button>
                                <button class="focus:outline-none ml-3 bg-warning-100 dark:bg-warning-700 dark:border-warning-700 dark:hover:bg-warning-600 transition duration-150 text-gray-600 dark:text-gray-400 ease-in-out hover:border-gray-400 hover:bg-gray-300 border rounded px-8 py-2 text-sm" @click="logout()">{{ t('logout') }}</button>
                            </div>                            
                        <!-- </div> -->
                    </div>
                <!-- </div> -->
                
            <!-- </div> -->
        </OverlayPanel>
    
</template>