<template>
  <DataTable
    v-bind="$attrs"
    stripedRows
    resizableColumns
    :rowClass="() => 'align-top'"
    class="simpleapp-datatable p-datatable-sm"
    :value="modelValue"
  >
    <template #empty>
      <div class="text-center">No record found.</div>
    </template>
    <template #header v-if="!setting.readonly && !readonly">
      <div class="flex flex-row gap-2">
        <slot name="header">
          <Button
            icon="pi pi-plus"
            @click="addNew()"
            class="simpleapp-datatable-add btn-primary pl-10 pr-10"
            type="button"
            ><i class="pi pi-plus">&nbsp;</i>{{ t("add") }}</Button
          >
        </slot>
      </div>
    </template>
    <slot>
      <Column class="text-center" header="undefine columns">
        <template #body>
          <div class="text-center">Missing {{ '<Column></Column>' }}</div>
        </template>
      </Column>
    </slot>
  </DataTable>
</template>
<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2023-10-28
 * Author: Ks Tan
 */
import { ref } from "vue";
import DataTable from "primevue/datatable";
import Column from "primevue/column";

const props = defineProps<{
  // columns:InputTableColumn[],
  setting: any;
  getField: Function;
  readonly?: boolean;
}>();

//{path: '#/properties/details', instancepath: '/details', fieldsetting: {…}, modelObject: Proxy(Object), apiObj: INVApi, …}
const modelValue = defineModel<any[]>();

const addNew = () => {
  const field = props.setting.path.split("/").at(-1);
  if (props.setting.document[`add${field}`]) {
    props.setting.document[`add${field}`]();
  } else {
    console.log("customfield", modelValue.value);
    modelValue.value?.push({});
  }
};
/**
 * 1. support array with field to label
 * 2. auto add edit button
 * 3. option readonly or not readonly
 * 4.
 */
</script>
