<template>
  <div v-if="!value"></div>
  <a v-else
    @click="openViewer"
    class="text-primary-700 dark:text-primary-400 hover:text-primary-500 cursor-pointer"
  >
    <slot name="default">
      
      <TextDanger v-if="!value">{{t('undefined')}}</TextDanger>
      <TextDanger v-else-if="!Array.isArray(fields) || !fields[0]">{{t('undefinedFields')}}</TextDanger>
      <div v-else-if="value[fields[0]]">{{ value[fields[0]] }}</div>
      <div v-else></div>
    </slot>
  </a> 
</template>
<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization. It is changable.
 * --remove-this-line-to-prevent-override--
 * last change 2024-02-04
 * author: Ks Tan
 */
import { RendererSetting } from "~/types";
const props = defineProps<{
  fields?: string[];
  setting: RendererSetting;
  value: any;
}>();
const viewervalue = computed(()=>{
  return props.value ?? {}
})
const openViewer = () => {
  useNuxtApp().$event("ViewRecord", {
    _id: props.value._id,
    documentName: props.setting.documentName,
    viewer: getDocument(props.setting.documentName)?.viewer,
    label:
      props.fields !== undefined
        ? props.value[props.fields[0]]
        : props.setting.documentName,
    document: getDocument(props.setting.documentName)?.docClass,
    eventId: randomUUID(),
    after: () => {
      useNuxtApp().$event("CloseDialog", props.setting.documentName);
    },
  });
};
</script>
