<template>
  
  <span>
    <span class="mr-1" v-if="showCurrency">{{ getCurrency() }}</span>    
    <span v-if="typeof modelValue != 'undefined'">{{
    modelValue.toLocaleString(useI18n().defaultLocale, options)
      }}</span>
    <span v-else-if="typeof props.value != 'undefined'">{{
      props.value.toLocaleString(useI18n().defaultLocale, options)
      }}</span>
    <span v-else>-</span>
  </span>
</template>
<script lang="ts" setup>
/**
 * This file was automatically generated by simpleapp generator during initialization.
 * DONT CHANGE THIS FILE CAUSE IT OVERRIDE
 * last change 2024-02-04
 * author: Ks Tan
 */
const options = {
  style: "decimal", // Other options: 'currency', 'percent', etc.
  minimumFractionDigits: 2,
  maximumFractionDigits: 2,
};
const modelValue = defineModel<number>();
const props = defineProps<{ showCurrency?: boolean ; value?:number }>();

const currenyValue = computed(() => {
  if (typeof modelValue.value == 'number'){
    return Intl.NumberFormat(useI18n().defaultLocale, 
        {}).format(modelValue.value);
  }else if(typeof props.value == 'number'){
    return Intl.NumberFormat(useI18n().defaultLocale,{}).format(props.value);
  }else return '-'
  
  
});


</script>
