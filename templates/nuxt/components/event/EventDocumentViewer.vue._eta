<template>
    <Dialog v-model:visible="visible"         
        :pt="{root:{class:'w-5/6 h-5/6'}}"
        :modal="true" 
        :close-on-escape="false" >                
        

        <template #header>
            <div class="flex flex-row gap-4">
                <Chip v-for="(v,k) in allview" :label="v.label" @remove="deleteTab" :removable="true"
                />
            </div>            
        </template>
        <template #default>                    
            <div v-for="(v,k) in allview" v-memo="[k]" class="viewer-item flex flex-col">            
                    <component                             
                        :is="defineAsyncComponent(v.viewer)" 
                        :_id="v._id" 
                        :readonly="v.readonly" 
                        @after-create="callback(v,$event)" 
                            />
            </div>
        </template>                
    </Dialog>
</template>
<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization.
 * IT WONT OVERRIDE AND YOU CAN MODIFY IT.
 * last change 2024-01-27
 * author: Ks Tan
 */
import { onKeyStroke } from '@vueuse/core'
import { useDialog } from 'primevue/usedialog';
import {defineAsyncComponent} from 'vue'
import { ViewRecord } from '~/types';
// import TabView from 'primevue/tabview';
import Chip from 'primevue/chip';


const {$listen,} = useNuxtApp()
const visible = ref(false)
const allview = ref<{[key:string]:ViewRecord}>({})

const callback = (v:ViewRecord,data:any)=>{
    if(v.afterCreate){
        v.afterCreate(data)
    }
    deleteTab()
}
onKeyStroke('Escape', (e) => {
  e.preventDefault()
  deleteTab()
})

const deleteTab=()=>{
    
    const keys = Object.keys(allview.value)
    const lastkey = keys[keys.length-1]
    delete allview.value[lastkey]
    // updateprops.value++
    if(Object.keys(allview.value).length==0){
        visible.value=false
        return
    }
}

$listen('ViewRecord',(setting)=>{     
    visible.value=true    
    allview.value[setting.eventId]=setting
    
})

</script>

<style scoped>
.viewer-item{
    display: none;
}
.viewer-item:last-child{    
    display: flex;    
}
</style>