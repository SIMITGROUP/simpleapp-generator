<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization.
 * DO NOT MODIFY IT BY HAND.
 * last change 2023-09-09
 * author: Ks Tan
 */

import { useToast, } from 'primevue/usetoast';
import type {  ToastMessageOptions } from 'primevue/toast';
import Toast from 'primevue/toast';
import { stringify } from 'ajv';
import {upperFirst, last } from 'lodash'
const toast = useToast();
const { $event,$listen } = useNuxtApp()

let resmsg:ToastMessageOptions = {} as ToastMessageOptions


$listen('*',(type:any,data:any)=>{ //simple use case, use any to prevent error
    let arrupdate = type.split(':')
    let eventdata = data
    let duration = 3000
    let severity:typeof resmsg['severity'] 
    let isshow=true
    let toastgroup='default'
    let eventname = arrupdate[1]
    let eventtype = arrupdate[0]
    let title = ''
    if(type.indexOf('error')>=0){
        duration = 0
        severity='error'
        title=upperFirst(eventname) +' failed'
    }
    else if(type.indexOf('warn')>=0){
        duration = 10000
        severity='warn'
        title=upperFirst(eventname) +' with warning'
    }
    else if(type.indexOf('info')>=0){
        duration = 3000
        severity='info'
        isshow=false
        title='Info'
    }
    else if(type.indexOf('success')>=0){
        duration = 3000
        severity='success'
        title= upperFirst(eventname) +' successfully'
    }
    if(Array.isArray(data)){
        toastgroup='list'
    }else if(typeof data == 'object'){
        // title = camelCaseToWords(useCamelCase(title.replace(":","-")))
        eventdata = data.message
    }
    

    if(isshow && severity){
        console.log("isshow",isshow,"event:",severity,eventdata)
        toast.removeAllGroups()
        resmsg = { severity: severity, summary: title, detail :eventdata, life: duration, group:toastgroup}
        toast.add(resmsg)
    }
    isshow=false
    
})


const getFieldName = (path:string)=>{
    const lastword :string= last<string>(path.split('/'))??''
    return camelCaseToWords(lastword)
    // const lastField = path.split
}
</script>
<template>
    <Toast group="default"/>
    <Toast group="list">
        <template #message="p">
            <ol>
                <li v-for="(item,index) in  p.message.detail" :key="index"><b>{{getFieldName(item.instancePath)}}</b>: {{ item.message }}</li>
            </ol>            
        </template>
    </Toast>
</template>
