<template>
    <div class="h-screen flex flex-col">
        
        <div class="flex flex-col grow overflow-y-auto">
            <div class="flex flex-col mb-14 w-full">
            <slot></slot>                          
            </div>
                        
              
        </div> 
        <!-- fixed -->
        <div v-if="getCurrentXorg()" class="flex h-16  border-t-2 dark:border-t-gray-700  text-3xl  flex-row   left-0 w-full  justify justify-between bottom-0 fixed z-50 bg-white dark:bg-slate-900 opacity opacity-95 " > 
                <div v-for="item in menus">
                    <NuxtLink v-if="item.path !== undefined"
                        :class="`pi ${item.iconClass} p-4 cursor-pointer inline-block align-middle`"
                        :to="getDocumentUrl(item.path)"
                        >
                            
                    </NuxtLink>         
                    <div v-else-if="item.command" :class="`pi ${item.iconClass} p-4 cursor-pointer inline-block align-middle`" @click="item.command">
                    </div>       
                </div>
                
                <HeaderButtonMenuPicker v-model="showMenu"></HeaderButtonMenuPicker>
                <HeaderButtonProfile v-model="showProfile"/>
                <UserInvitation/>
        </div> 
        
        <!-- <HeaderBar class="border flex flex-row h-10 fixed left-0 w-full  justify justify-between top-0 z-50 bg-white  dark:bg-gray-800"/> -->
     
    </div>
</template>
<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator during initialization. It is changable.
 * last change 2024-02-22
 * author: Ks Tan
 */
const showMenu =ref(false)
const showProfile =ref(false)

const openMenu = ()=>showMenu.value=true
const openProfile = ()=>showProfile.value=true
type MenuType = {iconClass:string,path?:string,command?:Function}
type AllMenus = {[key:string]:MenuType[]}
const menus=ref<MenuType[]>([])
    // {iconClass:'pi-bars',path:'managestudents/profile'},
const allmenus:AllMenus = {
    admin:[
            {iconClass:'pi-home dark:text-white',path:''},
            //{iconClass:'pi-users  dark:text-white',path:'managestudents'},
            //{iconClass:'pi-calendar dark:text-white',path:`manageclasses`},
            {iconClass:'pi-bars dark:text-white',command: openMenu},    
            {iconClass:'pi-user  dark:text-white',command: openProfile},            
        ],
    teacher: [{iconClass:'pi-home dark:text-white',path:''},
            {iconClass:'pi-user  dark:text-white',command: openProfile},],
    unknown:[]
}

const readGroup=()=>{    
    if(getUserProfile()?.currentGroup) {
        menus.value = allmenus[getUserProfile()?.currentGroup ?? 'unknown']
    }
}

onMounted(()=>{    
    readGroup()    
    useNuxtApp().$listen('pickGroup',()=>readGroup())    
})

</script>