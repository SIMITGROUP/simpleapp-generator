<template>
    <div class="simpleapp-crudsimple">    
        <button class="simpleapp-btn-addnew" @click="newData">New</button>
        
      
      <SimpleAppDatatable
            @row-dblclick="editRecord"
            v-model="recordlist"
            :setting="{}"
            :columns="listColumns"
          ></SimpleAppDatatable>

      <DebugDocumentData v-model="data"/>
    </div>

    <Dialog v-model:visible="visible" modal header="Header" class="crudsimple-dialog" :autoZIndex="false" :style="{zIndex:100, width: '80vw' }">        
        <SimpleAppForm :document="obj" :title="title" #default="o">        
            <button class="simpleapp-btn-addnew" @click="newData">New</button>
            <button class="simpleapp-btn-save" @click="saveData">Save</button>
            <button class="simpleapp-btn-delete" @click="deleteData($event)">Delete</button>
            <ConfirmPopup></ConfirmPopup>

        <slot :data="o.data" :getField="o.getField" name="default"></slot>
      </SimpleAppForm>
    </Dialog>
</template>
<script setup lang="ts">

import { SimpleAppClient } from '@simitgroup//simpleapp-vue-component/src/SimpleAppClient';
import SimpleAppForm from '@simitgroup/simpleapp-vue-component/src/components/SimpleAppForm.vue';
import SimpleAppDatatable from '@simitgroup/simpleapp-vue-component/src/components/SimpleAppDatatable.vue';
import Dialog from 'primevue/dialog';
import ConfirmPopup from 'primevue/confirmpopup';
import { useConfirm } from "primevue/useconfirm";

const confirm = useConfirm();
const props = defineProps<{
    document:SimpleAppClient<any,any>
    listColumns:string[]
    title:string
}>()
const visible = ref(false)
const obj = props.document
const data = obj.getReactiveData()
const recordlist = ref();


const refresh = () => {
  obj.list().then((res:any) => {    
    recordlist.value = res;
  });
};
const newData = () => {
    obj.setNew()
    visible.value=true;
};

const editRecord = (event: any) => {
  obj.getById(event.data._id);
  visible.value=true
};

const saveData = () => {
  if (data.value._id == "") {
    obj.create().then(()=>visible.value=false).finally(() => refresh());
  } else {
    obj.update().then(()=>visible.value=false).finally(() => refresh());
  }
};
const deleteData = (event:Event) => {
    console.log("deleteData")
    confirm.require({
        target: event.currentTarget as HTMLElement,
        message:'Delete?',
        icon: 'pi pi-exclamation-triangle',
        acceptClass: 'p-button-danger',
        accept: ()=>{
            obj.delete(data.value._id ?? "").then(()=>visible.value=false).finally(() => {
                refresh();    
            });
        },
        reject: () => {
            console.log("Cancel delete")
        }
    })
  
};
refresh();
</script>
<style scoped>
.crudsimple-dialog{
    z-index: 100;
}
</style>