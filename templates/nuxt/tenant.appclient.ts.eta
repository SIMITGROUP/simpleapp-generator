/**
 * This file was automatically generated by simpleapp generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and regenerate this file.
 * last change 2023-09-23
 * Author: Ks Tan
 */
import { SimpleAppClient } from "./SimpleAppClient";
import { AxiosResponse } from "axios";
import { v4 as uuidv4 } from "uuid";
const uuid = uuidv4();
// import { JSONSchema7 } from 'json-schema';
import {
  Configuration,
  TENANTApi,
  Tenant,

  /*tenantId{"type":"number","required":true,"examples":[1],"default":0},*/

  /*tenantName{"type":"string","required":true,"examples":["tenant1"],"default":""},*/

  /*uuid{"type":"string","required":true,"format":"uuid","examples":["xxxxx-yyyyy-zzzzzz-aaaa"],"default":""},*/

  /*isactive{"type":"boolean","required":true,"examples":[true],"default":true},*/

  /*description{"type":"string","required":false,"examples":["sample desc"],"default":""},*/
  TenantOwner,

  /*_id{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*doctype{"type":"string","required":false,"description":"Control value, dont edit it","examples":["tenant"],"default":"tenant"},*/

  /*created{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*updated{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*createdby{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*updatedby{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*orgId{"type":"number","required":false,"description":"Control value, dont edit it","default":0},*/

  /*branchId{"type":"number","required":false,"description":"Control value, dont edit it","default":0},*/
} from "../openapi";

export type {
  Tenant,

  /*tenantId{"type":"number","required":true,"examples":[1],"default":0},*/

  /*tenantName{"type":"string","required":true,"examples":["tenant1"],"default":""},*/

  /*uuid{"type":"string","required":true,"format":"uuid","examples":["xxxxx-yyyyy-zzzzzz-aaaa"],"default":""},*/

  /*isactive{"type":"boolean","required":true,"examples":[true],"default":true},*/

  /*description{"type":"string","required":false,"examples":["sample desc"],"default":""},*/
  TenantOwner,

  /*_id{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*doctype{"type":"string","required":false,"description":"Control value, dont edit it","examples":["tenant"],"default":"tenant"},*/

  /*created{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*updated{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*createdby{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*updatedby{"type":"string","required":false,"description":"Control value, dont edit it","default":""},*/

  /*orgId{"type":"number","required":false,"description":"Control value, dont edit it","default":0},*/

  /*branchId{"type":"number","required":false,"description":"Control value, dont edit it","default":0},*/
} from "../openapi";

export class TenantClient extends SimpleAppClient<Tenant, TENANTApi> {
  public readonly schema = {
    type: "object",
    "x-isolation-type": "none",
    required: ["tenantId", "tenantName", "isactive", "owner", "uuid"],
    properties: {
      tenantId: {
        type: "integer",
        "x-document-no": true,
        minimum: 1,
        examples: [1],
        minLength: 1,
      },
      tenantName: {
        type: "string",
        "x-document-label": true,
        examples: ["tenant1"],
        minLength: 1,
      },
      uuid: {
        type: "string",
        minLength: 16,
        format: "uuid",
        examples: ["xxxxx-yyyyy-zzzzzz-aaaa"],
      },
      isactive: { type: "boolean", examples: [true], default: true },
      description: { type: "string", examples: ["sample desc"] },
      owner: {
        type: "object",
        "x-foreignkey": "globaluser",
        properties: {
          _id: { type: "string", examples: ["aa"] },
          label: { type: "string", examples: ["aaaa"] },
        },
      },
      _id: { type: "string", description: "Control value, dont edit it" },
      doctype: {
        type: "string",
        default: "tenant",
        examples: ["tenant"],
        description: "Control value, dont edit it",
      },
      created: { type: "string", description: "Control value, dont edit it" },
      updated: { type: "string", description: "Control value, dont edit it" },
      createdby: { type: "string", description: "Control value, dont edit it" },
      updatedby: { type: "string", description: "Control value, dont edit it" },
      orgId: { type: "number", description: "Control value, dont edit it" },
      branchId: { type: "number", description: "Control value, dont edit it" },
    },
  };
  protected documentIdentityCode = "tenantId";
  protected documentIdentityName = "tenantName";
  constructor() {
    const { $event, $listen, $axios } = useNuxtApp();
    let xorg = getTenant();
    if (!xorg) {
      xorg = "MC0wLTA"; //0-0-0
    }

    const apiconfig = new Configuration({
      basePath: `${useRuntimeConfig().public.APP_URL}/api/${xorg}`,
    });
    const apiobj = new TENANTApi(apiconfig, apiconfig.basePath, $axios);
    super(apiobj, "tenant", "tenant");
    this.event = $event;
    this.listen = $listen;

    this.setNew();
    watch(this.getData(), (newvalue) => {
      //console.log("Something change",this.completeformula)
      if (this.completeformula == true) {
        // console.log("Trigger caclculate")
        this.completeformula = false;
        this.reCalculateValue();
        this.completeformula = true;
      } else {
        //console.log("avoid unlimited loop")
      }
    });
  }
  setNew = () => {
    const { $userstore } = useNuxtApp();
    const defaultTenantId = $userstore ? $userstore().tenantId : 1;

    const newdata = {
      tenantId: defaultTenantId,

      tenantName: "",

      uuid: uuid,

      isactive: true,

      description: "",

      owner: <TenantOwner>{},

      _id: "",

      doctype: "tenant",

      created: "",

      updated: "",

      createdby: "",

      updatedby: "",

      orgId: 0,

      branchId: 0,
    };
    this.setData(newdata);
  };

  /*****************************x-document-api code*****************************************/

  reCalculateValue() {
    console.log("trigger new recalculate");
    const data = this.getData();
  }
}
