/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2024-02-23
 * Author: Ks Tan
 */
 
// import {getAccessToken,getServerUrl} from '~/shared/liblogin'

export default defineEventHandler(async (event:any) => {
    const session = await requireUserSession(event)
    const req = event.node.req;
    try{        
        const accessToken = await getAccessToken(event,session)        
        return new Promise<any>(async(resolve, reject)=>{
            // const result = {myname: 'this is me',myres:'hello'}

            const serverurl = getServerUrl()
            const xOrg = event.context.params?.xorg ?? ''
            const documentLink = event.context.params?._ ?? ''            
            const apiurl = serverurl +'/'+documentLink
            // console.log("Call backend url",apiurl)
            // console.log('context',event.context)
            try{                
                const method = req.method.toLowerCase()
                let body :any= null
                let querydata:any
                querydata = getQuery(event);
                if(['put','post','patch'].includes(method)){
                    body = await readBody(event);
                    
                }
                const result:any = await $fetch(apiurl,{
                    method:method,
                    headers:{
                        'authorization': `Bearer ${accessToken}`,                        
                        'x-org':xOrg,
                        'Content-Type': 'application/json',
                        'accept': 'application/json'

                    },
                    body:body,
                    params: querydata,
                })                
                resolve(result)
            }catch(err){
                reject(err)
            }
            
        })
    }catch(error){        
        throw createError({
            statusCode: 401,
            message: 'Unauthorised access without valid security token',
            data: error
          })
    }
    
    
})  



