/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2025-06-18
 * Author: --
 */

<%
  const upperFirstCase = (value) => {
    return value.charAt(0).toUpperCase() + value.slice(1);
  }

  const camelToKebab = (value) => {
    return value.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  }

  const getMiniAppInfo = (module) => {
    const config = module.schema['x-simpleapp-config'];
    const resourceName = config?.resourceName ?? config.documentName;

    const pascalName = upperFirstCase(resourceName);
    const kebabName = camelToKebab(resourceName);

    const miniAppWhitelistApis = config?.miniApp?.whitelist || [];
    const hasMiniAppWhitelistedApi = miniAppWhitelistApis.length > 0;

    return {
      resourceName, 
      pascalName, 
      kebabName,
      hasMiniAppWhitelistedApi,
      miniAppWhitelistApis,
    }
  }
%>

<% for (let i = 0; i < it.modules.length; i++) { %>
  <%
    const { pascalName, kebabName, hasMiniAppWhitelistedApi } = getMiniAppInfo(it.modules[i]);
  %>
  <% if(hasMiniAppWhitelistedApi) { %>
    import { MiniApp<%= pascalName %>BridgeService } from "../services/resources/<%= kebabName %>-bridge.service";
  <% } %>
<% } %>

export type MiniAppResourceMap = {
  <% for (let i = 0; i < it.modules.length; i++) { %>
    <%
      const { resourceName, pascalName, hasMiniAppWhitelistedApi } = getMiniAppInfo(it.modules[i]);
    %>
    <% if(hasMiniAppWhitelistedApi) { %>
      <%= resourceName %>: MiniApp<%= pascalName %>BridgeService;
    <% } %>
  <% } %>
};
