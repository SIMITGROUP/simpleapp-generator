<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */

import {
  InputTableColumnType,
  InputTableColumn,

} from "@simitgroup/simpleapp-vue-component/src/type";
import Column from "primevue/column";
import _ from "lodash"
import { _backdropSaturate } from "#tailwind-config/theme";
import {onMounted} from 'vue'
import { all } from "axios";
const { $UserDoc } = useNuxtApp();
const doc = $UserDoc();
const data = doc.getReactiveData();
const {$listen} = useNuxtApp()
const columns = [
  "ssoId",
  "fullname",
  "email"
];
type branchesType= typeof data.value.branches[number]
//branches[number]
type branchetype = typeof  data.value.branches[number]['branch']
const allbranches = ref([] as typeof data.value.branches)
const {$OrganizationDoc} = useNuxtApp()
const branchreq=await $OrganizationDoc().branchlist()
const branchlist=branchreq.data
const prepareBranchList = async () => {
    console.log("prepareBranchList")
    
    allbranches.value=[]
    // $OrganizationDoc().branchlist().then((res)=>{
    //   console.log("res",res.data)
    //   const branchlist =res.data
    //   const branches:branchetype[] = branchlist.data
    //   console.log("branches",branches)
    
      for(let i = 0; i< branchlist.length;i++){
        const branch = branchlist[i]
        console.log("branchdata",branch)
        const res = checkBranchPermissionExists(branch)
        if(res){
          allbranches.value.push(res)
        }else{
          const tmp:branchesType = {branch:branch,isactive:false,group:''}
          allbranches.value.push(tmp)
        }
      }

      console.log("allbranches",allbranches.value)
      data.value.branches=allbranches.value
    // })
    
    
  }
  const checkBranchPermissionExists = (branch:any):branchesType|undefined=>{
      const filter = { "branches":{"branchId":branch.branchId } }
      const result = _.find(data.value.branches,filter)
      return result as branchesType|undefined
  }
  const checkAllBranches = (val:any)=>{
      const ischecked =val.target.checked??false

      for(let i=0;i<allbranches.value.length;i++){
        allbranches.value[i].isactive=ischecked
      }
      // console.log(allbranches)
    }
  onMounted(()=>{
    console.log("Onmounted")
    $listen('newRecord',prepareBranchList)
    $listen('editRecord',prepareBranchList)    
    // prepareBranchList()
    // watch((data.value._id),()=>{
    //   prepareBranchList()
    // })

  })
  onMounted(()=>{
    prepareBranchList()
  })
//end
</script>
<template>
  <div>


    <CrudSimple
      :document="doc"
      title="User"
      #default="o"
      :path="`/${useRoute().params.xorg}/user`"
      :listColumns="columns"
    >
  


      <SimpleAppText
        autofocus
        :setting="o.getField('#/properties/ssoId')"
        v-model="data.ssoId"
      />

      <SimpleAppText
        autofocus
        :setting="o.getField('#/properties/fullname')"
        v-model="data.fullname"
      />

      <SimpleAppText
        autofocus
        type="string"
        :setting="o.getField('#/properties/email')"
        v-model="data.email"
      />

      <SimpleAppCheckbox
        autofocus
        :setting="o.getField('#/properties/isactive')"
        v-model="data.isactive"
      />
   
      <div class="cols-span-4">
        <div class="cols-span-6">
          
          <ul>
            <li class="grid grid-cols-6 bg-gray-600 text-white">
              <div>OrgId</div>
              <div>Org</div>
              <div>BranchId</div>
              <div>Branch</div>
              <div class="flex flex-col text-center"> Active <input type="checkbox" @change="checkAllBranches($event)"> </div>
              <div>Group</div>
            </li>
            <li v-for="(b,i) in allbranches"  class="grid grid-cols-4">          
              
              <div>{{ b.branch.orgId }}</div>
              <div>{{ b.branch.orgCode }}</div>
              <div>{{ b.branch.branchId }}</div>
              <div>{{ b.branch.branchCode }}</div>
              <div class=" text-center">
                <SimpleAppCheckbox
                  v-model="data.branches[i].isactive"
                  :setting="o.getField('#/properties/branches/items/properties/isactive')"
                  :hidelabel="true" :instancePath="`/branches/${i}/isactive`"
                />
              </div>
              <div>               
                <SimpleAppSelect
                v-model="data.branches[i].group"
                class="w-60"
                :setting="o.getField('#/properties/branches/items/properties/group')"
                :hidelabel="true"
                :instancePath="`/branches/0/group`"
              /> 
            </div>
            </li>
          </ul>
        </div>
    </div>
    </CrudSimple>
  </div>
</template>
