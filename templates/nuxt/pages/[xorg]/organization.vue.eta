<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */
import { SimpleAppInputType } from "~/types";
import ConfirmPopup from "primevue/confirmpopup";
import { useConfirm } from "primevue/useconfirm";
const confirm = useConfirm();

const { $OrganizationDoc, $BranchDoc, $event, $listen } = useNuxtApp();
const doc = $OrganizationDoc();
const brancdoc = $BranchDoc();
const data = doc.getReactiveData();
const branchlist = ref([]);
const isReadOnly = ref(true);
const getCurrentOrg = async () => {
  await doc.getById(getUserProfile().orgRecordId);
};
const fetchRecord = async (id: string) => {
  await doc.getById(id);
  branchlist.value = await brancdoc.search({
    filter: { orgId: data.value.orgId },
  });
};

const id = computed((): string => String(useRoute().params.id ?? ""));
const updateData = async () => {
  doc
    .update()
    .then(() => {
      refresh();
      isReadOnly.value = true;
    })
    .catch((err) => {
      console.error(err);
    });
};

const refresh = () => {
  $event("RefreshDocumentList", { documentName: doc.getDocName() });
};

definePageMeta({
  menuPath: "setting/organization",
});

//branch record update then reload
$listen("RefreshDocumentList", (data) => {
  console.log("refresh from branch", data.documentName, "==", doc.getDocName());
  if (data.documentName == "branch") {
    fetchRecord(id.value);
  }
});

if (id) {
  fetchRecord(id.value);
}

getCurrentOrg();
</script>
<template>
  <div class="grid grid-cols-3">
    <title>{{ t("organization") }}</title>
    <div class="">
      <Card>
        <template #header><h1 class="text-2xl">Organization</h1></template>
        <template #content>
          <SimpleAppForm #default="o" :document="doc" :readonly="isReadOnly">
            <div
              class="simpleapp-tool-bar col-span-4 text-left gap-4"
              v-if="canPerform(doc.getDocName(), 'update')"
            >
              <Button
                v-if="isReadOnly"
                class="btn btn-primary"
                @click="isReadOnly = false"
                type="button"
                >Edit</Button
              >
              <Button
                v-else
                class="btn btn-primary"
                @click="updateData"
                type="button"
                >Update</Button
              >
              <ConfirmPopup></ConfirmPopup>
            </div>
            <div class="flex flex-col">
              <div class="grid grid-cols-2 gap-4">
                <SimpleAppInput
                  :input-type="SimpleAppInputType.text"
                  autofocus
                  v-model="data.orgCode"
                  :setting="o.getField('#/properties/orgCode')"
                />
                <SimpleAppInput
                  :input-type="SimpleAppInputType.text"
                  v-model="data.orgName"
                  class=""
                  :setting="o.getField('#/properties/orgName')"
                />
                <SimpleAppInput
                  :input-type="SimpleAppInputType.checkbox"
                  v-model="data.active"
                  :setting="o.getField('#/properties/active')"
                />
                <SimpleAppInput
                  :input-type="SimpleAppInputType.text"
                  v-model="data.timeZone"
                  :setting="o.getField('#/properties/timeZone')"
                />
              </div>
              <div>
                <SimpleAppInput
                  :input-type="SimpleAppInputType.textarea"
                  :setting="o.getField('#/properties/description')"
                  v-model="data.description"
                />
              </div>
            </div>
            <DebugDocumentData v-model="data" label="organization" />
          </SimpleAppForm>
        </template>
      </Card>
    </div>
    <div>
      <Card>
        <template #header>
          <!-- <h1 class="text-2xl font-bold">{{ data.orgName }}</h1> -->
        </template>
        <template #content>
          <div class="">
            <h1>Branches</h1>
            <Button @click="goBranch('new')">New</Button>
            <ListView
              :list="branchlist"
              title-field="branchName"
              sub-title-field="branchCode"
              :url="getDocumentUrl('organization', id)"
            >
            </ListView>
          </div>
        </template>
      </Card>
    </div>
    <div>
      <NuxtPage></NuxtPage>
    </div>
  </div>
</template>
