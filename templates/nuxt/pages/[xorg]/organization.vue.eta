<template>
  <title>{{ t("organization") }}</title>
  <div class="w-full flex-col flex">     
      <MobileToolbar>
        <template #center>{{ t('organization') }}</template>
        <template #end>
          <ButtonText @click="showEditOrg=true"><i class="pi pi-pencil"></i></ButtonText>
        </template>
      </MobileToolbar>
      <div class="w-full flex flex-row p-2">        
        <div class="p-4">
            <div class="border w-12 h-12 md:w-24 md:h24"></div>
        </div>
        <div class="flex flex-col flex-1 ">
            <TextTitle>{{ data.orgName }} / {{ data.orgCode }}</TextTitle>            
            <div class="text-gray-600 dark:text-gray-400 text-sm">{{ data.description }}</div>
            <div class="text-gray-600 dark:text-gray-400 text-sm">
              {{ data.country }}/{{ data.currency }}/{{ data.timeZone }}//{{ data.offsetMinute }}
            </div>
            
        </div>
      </div>


      <div class="w-full p-2">
          <h1>Branches</h1>
          <ButtonText @click="goBranch('new')">{{ t('addBranch') }}</ButtonText>
          <ListView
            :list="branchlist"
            title-field="branchName"
            sub-title-field="branchCode"
            :url="getDocumentUrl('organization', id)"
          >            
          </ListView>          
      </div>
          
      
      <OverlaySideBarCrud v-model="showEditOrg" close-event-name="organization">
        <FormOrganization :_id="getUserProfile()?.orgRecordId" @after="afterOrganization"></FormOrganization> 
      </OverlaySideBarCrud>

      <OverlaySideBarCrud v-model="showEditBranch" close-event-name="branch">
        <NuxtPage :_id="id"></NuxtPage> 
      </OverlaySideBarCrud>
  </div>
</template>

<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2023-10-28
 * Author: Ks Tan
 */
import { FormCrudEvent, SimpleAppInputType } from "~/types";
import ConfirmPopup from "primevue/confirmpopup";
import { useConfirm } from "primevue/useconfirm";
const confirm = useConfirm();
const showEditOrg = ref<boolean>(false)
const showEditBranch = ref<boolean>(false)

const { $OrganizationDoc, $BranchDoc, $event, $listen } = useNuxtApp();

const orgId = computed(()=><string>getUserProfile()?.orgRecordId)
const doc = $OrganizationDoc();
const brancdoc = $BranchDoc();
const data = doc.getReactiveData();
const branchlist = ref([]);
const isReadOnly = ref(true);
const getCurrentOrg = async () => {
  await doc.getById(orgId.value);
  await fetchRecord()
};
const fetchRecord = async () => {
  //fetch org
  // await doc.getById(data.value.orgId);
  //fetch branch
  branchlist.value = await brancdoc.search({
    filter: { orgId: data.value.orgId },
  });

  console.log("reload data",branchlist)
};

const id = computed((): string => String(useRoute().params.id ?? ""));


definePageMeta({
  menuPath: "setting/organization",
});

//branch record update then reload
$listen("RefreshDocumentList", async (data) => {
  console.log("trigger RefreshDocumentList",data)
  if (data.documentName == "branch" || data.documentName == "organization") {
    await fetchRecord();
  }
});



const showBranchDialogIfRequired = () =>{
  if(useRoute().path.includes('/new') || id.value) showEditBranch.value=true
}

const afterOrganization = (actionName:FormCrudEvent)=>{
  if(actionName==FormCrudEvent.update){
    showEditOrg.value=false
    getCurrentOrg()
  }
}

watch(()=>useRoute().path,()=>showBranchDialogIfRequired())
onMounted(()=>showBranchDialogIfRequired())
getCurrentOrg();



</script>
