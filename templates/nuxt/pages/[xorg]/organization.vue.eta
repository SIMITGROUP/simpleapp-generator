<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */
import ConfirmPopup from "primevue/confirmpopup";
import { useConfirm } from "primevue/useconfirm";
const confirm = useConfirm();

const { $OrganizationDoc, $BranchDoc, $event, $listen } = useNuxtApp();
const doc = $OrganizationDoc();
const brancdoc = $BranchDoc();
const data = doc.getReactiveData();
const branchlist = ref([]);

const getCurrentOrg = async () =>{
    // const org = (await doc.search({filter:{orgId:getUserProfile().orgId}}))[0];  
    // console.log("orgorgorgorg",org)
    await doc.getById( getUserProfile().orgRecordId)
    // doc.getById()
}
const fetchRecord = async (id: string) => {
  await doc.getById(id);
  branchlist.value = await brancdoc.search({
    filter: { orgId: data.value.orgId },
  });
};

const id = computed((): string => String(useRoute().params.id ?? ""));

const disabled = computed(() => {
  return false;
});


const updateData = async () => {
  doc
    .update()
    .then(() => {
      // visible.value=false
      refresh();
    })
    .catch((err) => {
      console.error(err);
    });
};


const refresh = () => {
  $event("RefreshDocumentList", { documentName: doc.getDocName() });
};

//branch record update then reload
$listen("RefreshDocumentList", (data) => {
  console.log("refresh from branch", data.documentName, "==", doc.getDocName());
  if (data.documentName == "branch") {
    fetchRecord(id.value);
  }
});

if (id) {
  fetchRecord(id.value);
}

getCurrentOrg()
</script>
<template>
  <div class="grid grid-cols-3">
    <div class="">        
      <Card>
        <template #content>
          <SimpleAppForm #default="o" :document="doc">
            <div class="simpleapp-tool-bar col-span-4 text-left gap-4">             
             
              <Button
                class="bg-primary-600 hover:bg-primary-400 text-white"
                :disabled="disabled"
                @click="updateData"
                type="button"
                v-if="canPerform(doc.getDocName(), 'update') && !doc.isNew()"
                >Update</Button
              >
             

              <ProgressSpinner
                v-if="disabled == true"
                style="width: 2rem; height: 2rem"
              ></ProgressSpinner>
              <ConfirmPopup></ConfirmPopup>
            </div>
            <div class="flex flex-col">
              <div class="flex flex-row gap-4">
                <SimpleAppText
                  autofocus
                  v-model="data.orgCode"
                  :setting="o.getField('#/properties/orgCode')"
                />
                <SimpleAppText
                  v-model="data.orgName"
                  class=""
                  :setting="o.getField('#/properties/orgName')"
                />
                <SimpleAppCheckbox
                  v-model="data.active"
                  :setting="o.getField('#/properties/active')"
                />
              </div>
              <div>
                <SimpleAppTextarea
                  :setting="o.getField('#/properties/description')"
                  v-model="data.description"
                />
              </div>
            </div>
            <DebugDocumentData v-model="data" label="organization" />
          </SimpleAppForm>
        </template>
      </Card>

    </div>
    <div>
        <Card>
        <template #header>
          <!-- <h1 class="text-2xl font-bold">{{ data.orgName }}</h1> -->
        </template>
        <template #content>
          <div class="">
            <h1>Branches</h1>
            <Button @click="goBranch( 'new')">New</Button>
            <ListView
              :list="branchlist"
              title-field="branchName"
              sub-title-field="branchCode"
              :url="getDocumentUrl('organization', id) "
            >
            </ListView>
          </div>
        </template>
      </Card>
    </div>
    <div>
      <NuxtPage></NuxtPage>
    </div>
  </div>
</template>
