<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */
 import { SimpleAppInputType } from "~/types";
import ConfirmPopup from "primevue/confirmpopup";
import { useConfirm } from "primevue/useconfirm";
const confirm = useConfirm();

const { $BranchDoc, $OrganizationDoc, $event } = useNuxtApp();
const orgdoc = $OrganizationDoc();
const doc = $BranchDoc();
const data = doc.getReactiveData();
const bid = ref(String(useRoute().params.bid ?? ""));
const isReadOnly = ref(true);
const fetchRecord = async (id: string) => {
  await doc.getById(id);
};

const disabled = computed(() => {
  return false;
});

const createData = async () => {
  doc
    .create()
    .then((res) => {
      refresh();
      goBranch(res.data._id);
    })
    .catch((err) => {
      console.error(err);
    });
};
const updateData = async () => {
  doc
    .update()
    .then(() => {
      // visible.value=false
      refresh();
    })
    .catch((err) => {
      console.error(err);
    });
};
const deleteData = (event: Event) => {
  confirm.require({
    target: event.currentTarget as HTMLElement,
    message: "Delete?",
    icon: "pi pi-exclamation-triangle",
    acceptClass: "p-button-danger",
    accept: () => {
      // disabled.value=true
      doc.delete(data.value._id ?? "").then((res) => {
        refresh();

        goTo(doc.getDocName());
      });
    },
    reject: () => {
      console.log("Cancel delete");
    },
  });
};

const refresh = () => {
  $event("RefreshDocumentList", { documentName: doc.getDocName() });
  isReadOnly.value = true;
};

if (bid.value) {
  fetchRecord(bid.value);
} else {
  // const orgRecordid = ref(String(useRoute().params.id));
  // const orgdata = (await orgdoc.getById(orgRecordid.value)).data;
  doc.setNew();
  isReadOnly.value = false;
  data.value.tenantId = getUserProfile().tenantId;
  data.value.orgId = getUserProfile().orgId;
  data.value.organization._id = getUserProfile().orgRecordId;
  data.value.organization.label = getUserProfile().orgName;
  data.value.organization.orgId = getUserProfile().orgId;
  data.value.organization.code = getUserProfile().orgCode;
}
</script>
<template>
  <div class="grid grid-cols2">
    <SimpleAppForm :document="doc" #default="o" :readonly="isReadOnly">
      <div v-if="!isReadOnly" class="col-span-4 text-left gap-4">
        <Button
          class="btn btn-primary"
          :isReadOnly="isReadOnly"
          @click="createData"
          type="button"
          v-if="canPerform(doc.getDocName(), 'create') && doc.isNew()"
          >Create</Button
        >
        <Button
          class="btn btn-primary"
          @click="updateData"
          type="button"
          v-if="canPerform(doc.getDocName(), 'update') && !doc.isNew()"
          >Update</Button
        >
        <Button
          class="btn btn-danger"
          @click="deleteData($event)"
          type="button"
          v-if="canPerform(doc.getDocName(), 'delete') && !doc.isNew()"
          >Delete</Button
        >

        <ConfirmPopup></ConfirmPopup>
      </div>
      <div v-else class="col-span-4 text-left gap-4">
        <Button
          class="btn btn-primary"
          @click="isReadOnly = false"
          type="button"
          >Edit</Button
        >
      </div>

      <SimpleAppInput
        :input-type="SimpleAppInputType.text"
        v-model="data.branchCode"
        :setting="o.getField('#/properties/branchCode')"
      />
      <SimpleAppInput
        :input-type="SimpleAppInputType.text"
        v-model="data.branchName"
        :setting="o.getField('#/properties/branchName')"
      />
      <SimpleAppInput
        :input-type="SimpleAppInputType.checkbox"
        v-model="data.active"
        :setting="o.getField('#/properties/active')"
      />
      <SimpleAppInput
        :input-type="SimpleAppInputType.textarea"
        v-model="data.description"
        :setting="o.getField('#/properties/description')"
      />
    </SimpleAppForm>
    <DebugDocumentData v-model="data" label="branch" />
  </div>
</template>
