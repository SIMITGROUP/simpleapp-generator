import { ShallowRef } from "vue";
import { Customfield, CUSTOMFIELDApi } from "~/simpleapp/generate/openapi";

type CustomFieldStoreData = Pick<Customfield, "_id" | "collection" | "form">[];

type CustomFieldStore = {
  data: ShallowRef<CustomFieldStoreData>;
};

export default defineNuxtPlugin(async (nuxtApp) => {
  const useCustomFieldStore = defineStore("custom-field-store", {
    state: (): CustomFieldStore => ({
      data: shallowRef([]),
    }),
    actions: {
      async fetchList() {
        const config = getAxiosConfig();
        const api = new CUSTOMFIELDApi(config);
        const resp = await api.runSearch({
          filter: {},
          fields: ["_id", "collection", "form"],
        });
        // setTimeout(() => {
        console.log("set");
        this.$patch({ data: resp.data ?? [] });
        // }, 10000);
      },
      findByCollection(collection: string) {
        return this.data.find((item) => item.collection === collection) ?? null;
      },
    },
  });

  return {
    provide: {
      customFieldStore: useCustomFieldStore(),
    },
  };
});
