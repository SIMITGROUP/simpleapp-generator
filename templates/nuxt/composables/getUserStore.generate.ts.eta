/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2024-04-06
 * Author: Ks Tan
 */
let orgLogo = ""

export const getUserStore = ()=>{
    const {$userstore} = useNuxtApp()
    return $userstore
}
export const reloadUserStore = async () =>{
    const {$userstore} = useNuxtApp()
    await $userstore.loadRemoteUserInfo()
}
export const getCurrency = () =>getUserStore()?.currency ?? '$$'
export const getUserProfile =  () =>{    
    const userstore = getUserStore()
    
    return !userstore ? undefined :userstore.getUserInfo()
}

export const getCurrentXorg = () =>{
    return  (useRoute().params.xorg) ? String(useRoute().params.xorg) : undefined            
}
export const getPageBaseUrl = (resourcename:string) =>{
    return `/${getCurrentXorg()}/${resourcename}`;
}
/**
 * verify current user can perform specific action base on backend RBAC
 * @param resource:string upper case first letter document name
 * @param action:string action name, can be create/update/delete...
 * @return boolean
 */
export const canPerform = (resource:string,action:string):boolean =>{
    return getUserStore().canPerform(resource,action)
}

export const getProfileEmail = () => getUserProfile()?.email
export const getProfileFullName = () => getUserProfile()?.fullName

export const refreshOrgLogo = async () => {
  const logodata = await useNuxtApp().$OrganizationDoc().getApi().runGetlogo()
  orgLogo = logodata.data
}
export const getOrgLogo = ()=> orgLogo
export const setOrgLogo = (str:string) => orgLogo = str
