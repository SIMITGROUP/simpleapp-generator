/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2023-10-28
 * Author: Ks Tan
 */
export const getDocumentUrl = (document:string,id?:string,querystr?:string)=>{
    
    let path = useRoute().path.includes('/mobile/') || isMobile() ? 
            `/${getCurrentXorg()}/mobile/${document}`
                : `/${getCurrentXorg()}/${document}`
    if(id){
        path = path + '/'+id
    }
    if(querystr){
        path=path+'?'+querystr
    }
    return path
}

export const getPathResource=()=>{
    return useRoute().path.toString().replace('/'+getCurrentXorg(),'')
}

export const goTo = (document:string,id?:string,querystr?:string)=>{    
    navigateTo(getDocumentUrl(document,id,querystr))   
}


export const goBranch = (branchRecordId: string) => {
    const parenturl = getDocumentUrl("organization");
    const branchUrl = `${parenturl}/${branchRecordId}`;
    navigateTo(branchUrl);
  };

export const getPathPara = (paraname:string,emptyvalue:string=''):string=>{
   const paravalue = useRoute().params[paraname]
   if(paravalue){
    return paravalue.toString()
   }else{
    return emptyvalue
   }
}
export const getPathQuery = (paraname:string,emptyvalue:string|string[]=''):string|string[]=>{
    const paravalue = useRoute().query[paraname]
    if( paraname.includes('[')){
        return (typeof paravalue == 'string'? [paravalue] : paravalue) as string[]
    }else if(typeof paravalue == 'string'){
        return paravalue.toString()
    }
    else{
     return emptyvalue
    }
 }
export const setCurrentUrl = (path:string)=>useRouter().push({path:path})