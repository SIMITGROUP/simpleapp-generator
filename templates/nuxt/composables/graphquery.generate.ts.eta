/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2024-03-13
 * Author: Ks Tan
 */
import {NotificationStatus} from "~/types"
import { createHttpLink, } from '@apollo/client/core';

export const setGraphqlServer=()=>{
    const apolloclient = useNuxtApp().$apollo.defaultClient
    const newlink = createHttpLink({
        uri: `${useRuntimeConfig().public.apiUrl}/${getCurrentXorg()}/graphql`,
      })
      apolloclient.setLink(newlink)
      apolloclient.defaultOptions={
       
        query:{
         fetchPolicy: 'no-cache',
         errorPolicy: 'all'
        }
      }

  }
  
// export const graphquery=async<T>(qqlstr: typeof gql) =>(await useAsyncQuery<T>(qqlstr))


export const gqlQuery=async<T>(gqlstr:string):Promise<T|undefined>=>{
    const query = gql(gqlstr);
    try{
        const result = await useAsyncQuery<T>(query);        
        return result.data.value as T
    }catch(e){      
      useNuxtApp().$event('Notification',{
        documentName:'report',
        summary:t('reportQueryFailed'),
        status:NotificationStatus.error,
        data:e
      })      
      // return e
    }

}
