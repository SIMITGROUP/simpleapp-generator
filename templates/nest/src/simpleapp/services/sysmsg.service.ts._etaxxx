/**
 * This file was automatically generated by simpleapp generator. It is changable
 * --remove-this-line-to-prevent-override--
 * last change 2024-04-24
 * Author: Ks Tan
 */

import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { Injectable } from '@nestjs/common';
import { UserContext } from '../generate/commons/user.context';
import { SystemmessageProcessor } from '../generate/processors/sysmsg.processor';
//import { Systemmessage,SystemmessageHooks} from '../generate/types';
import * as types from '../generate/types';
export { Systemmessage } from '../generate/types';

@Injectable()
export class SystemmessageService extends SystemmessageProcessor {
  public hooks: types.SystemmessageHooks = {
    afterCreate : async(appuser:UserContext,data:types.Systemmessage) =>
      await this.afterCreate(appuser,data)
  };
  constructor(@InjectModel('Systemmessage') mydoc: Model<types.Systemmessage>) {
    super(mydoc);
  }

  async runDefault(appuser: UserContext) {
    return await this.search(appuser, { uid: appuser.getUid() });
  }
  async afterCreate(appuser:UserContext,data:types.Systemmessage){
    
  }
  
  /***************************** begin x-document-api definitions *****************************************/
 async runReadmsg(appuser:UserContext,id:string){
  const data =  await this.findById(appuser, id); 
  data.read=true
  await await this.findIdThenUpdate(appuser,id,data)
  return data
 }
 
  /***************************** end x-document-api definitions *****************************************/
}
