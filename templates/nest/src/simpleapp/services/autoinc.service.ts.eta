/**
 * This file was automatically generated by simpleapp generator.
 * It will not override by generator
 * last change 2023-09-23
 * Author: Ks Tan
 */
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { Injectable } from '@nestjs/common';
import { AutoincreamentProcessor } from '../generate/processors/autoinc.processor';
import { Autoincreament } from '../generate/types/autoinc.type';
import { UserProfile } from '../generate/commons/user.profile';
export { Autoincreament } from '../generate/types/autoinc.type';

@Injectable()
export class AutoincreamentService extends AutoincreamentProcessor {
  constructor(@InjectModel('Autoincreament') mydoc: Model<Autoincreament>) {
    super(mydoc);
  }

  //    hook = async (type: string, data?: any) => {
  //     switch(type){
  //         case 'init':
  //         break;
  //         case 'beforeSearch':
  //         break;
  //         case 'afterSearch':
  //         break;
  //         case 'beforeValidation':
  //         break;
  //         case 'afterValidation':
  //         break;
  //         case 'beforeCreate':
  //         break;
  //         case 'afterCreate':
  //         break;
  //         case 'beforeUpdate':
  //         break;
  //         case 'afterUpdate':
  //         break;
  //         case 'beforeDelete':
  //         break;
  //         case 'afterDelete':
  //         break;
  //         case 'beforeFetchRecord':
  //         break;
  //         case 'afterFetchRecord':
  //         break;
  //         default:
  //         break;
  //         }
  //     return true;
  //   };


  async generateNextNo(appuser:UserProfile, collection:string,field:string){
    const res = await this.search(appuser,{collectionName:collection,fieldName:field})
    // console.log(res)
    let data 
    if(res.length>0){
      // console.log("FOUND RESULT------")      
      const tmp =res[0]
      const nextno = tmp.nextno
      data = {collectionName:collection,fieldName:field,nextno:nextno}
      this.findIdThenUpdate(appuser,tmp._id,{collectionName:collection,fieldName:field, nextno: tmp.nextno+1 }) 

    }else{
      // console.log("CREATE ROW------")
      this.data = {collectionName:collection,fieldName:field,nextno:2}
      const  createResult = await this.create(appuser,this.data)      
      data = {collectionName:collection,fieldName:field,nextno:1}
    }
    
    
    return data
  }
}
