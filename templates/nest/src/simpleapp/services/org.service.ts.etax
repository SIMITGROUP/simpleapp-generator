/**
 * This file was automatically generated by simpleapp generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and regenerate this file.
 * last change 2023-09-23
 * Author: Ks Tan
 */
import { UserProvider } from '../../class/UserProvider';
import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { OrganizationJsonSchema } from './org.jsonschema';
import { OrganizationServiceHook } from '../../hooks/org.hook';
import {
  SimpleAppService,
  IsolationType,
  HookType,
} from '../../class/SimpleAppService';
import {  Organization } from './org.type';
import _ from 'lodash';
@Injectable()
export class OrganizationService extends OrganizationServiceHook {
  protected documentIdentityCode = 'orgId';
  protected documentIdentityLabel = 'orgName';
  constructor(@InjectModel('organization') mydoc: Model<Organization>) {
    super('org', 'organization', mydoc, IsolationType.tenant);
    this.setSchema(OrganizationJsonSchema);
  }

  reCalculateValue() {
    console.log('trigger new recalculate');
    const data = this.getData();

    // process compute for 2nd level sub tables
    // for (let index = 0; index < data.branches.length; index++) {}
  }
  /***************************** additional execute *****************************************/
  public async getBranchInfo(orgId: string, branchId: string) {
    // console.log('getBranchInfo');
    // const filter = {
    //   orgId: Number(orgId),
    //   'branches.branchId': Number(branchId),
    // };
    // const data = await this.search(filter);
    // console.log(filter, data);
    // if (data && data.length > 0) {
    //   const v = data[0];
    //   const vl = _.find(v.branches, (item) => {
    //     return item.branchId == Number(branchId);
    //   });

    //   const result = {
    //     orgId: v.orgId,
    //     orgCode: v.orgCode,
    //     orgName: v.orgName,
    //     branchId: branchId,
    //     branchCode: vl.branchCode,
    //     branchName: vl.branchName,
    //   };
    //   return result;
    // } else {
    //   return undefined;
    // }
  }
}
