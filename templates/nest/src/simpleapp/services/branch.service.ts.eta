/**
 * This file was automatically generated by simpleapp generator.
 * It will not override by generator
 * last change 2023-09-23
 * Author: Ks Tan
 */
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { Injectable } from '@nestjs/common';
import { BranchProcessor } from '../generate/processors/branch.processor';
import { Branch } from '../generate/types/branch.type';
export { Branch } from '../generate/types/branch.type';
import { AutoincreamentService } from './autoinc.service';
import { UserProfile } from '../generate/commons/user.profile';
@Injectable()
export class BranchService extends BranchProcessor {
protected strictIsolation=false
  constructor(@InjectModel('Branch') mydoc: Model<Branch>,private increament:AutoincreamentService) {
    super(mydoc);
  }

     hook = async (appuser:UserProfile,type: string, data?: any) => {
      switch(type){
  //         case 'init':
  //         break;
  //         case 'beforeSearch':
  //         break;
  //         case 'afterSearch':
  //         break;
  //         case 'beforeValidation':
  //         break;
  //         case 'afterValidation':
  //         break;
            case 'beforeCreate':        
                  const searchresult = await this.increament.generateNextNo(appuser,'branch','branchId')         
                  data.branchId = searchresult.nextno
                break;
  //         case 'afterCreate':
  //         break;
  //         case 'beforeUpdate':
  //         break;
  //         case 'afterUpdate':
  //         break;
  //         case 'beforeDelete':
  //         break;
  //         case 'afterDelete':
  //         break;
  //         case 'beforeFetchRecord':
  //         break;
  //         case 'afterFetchRecord':
  //         break;
  //         default:
  //         break;
          }
      return true;
    };
}
