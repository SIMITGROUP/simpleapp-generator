import { Request } from 'express';
import {
    Controller,
    Get,
    Put,
    Post,
    Delete,
    Body,
    Query,
    Param,
    Type,
    Res,
    HttpStatus,
    Inject,
    Injectable,
    Scope,
    HttpException,
  } from '@nestjs/common';
import {Roles} from '../commons/roles/roles.decorator'
import {Role} from '../commons/roles/roles.enum'
import { ApiTags, ApiBody, ApiResponse,ApiOperation } from '@nestjs/swagger';
import { UserProvider } from '../commons/providers/UserProvider';
import {ProfileService} from '../../services/profile.service'



@ApiTags('PROFILE')
@Controller({path:"profile",scope: Scope.REQUEST,})
export class ProfileController{            
    constructor(private profileservice: ProfileService) {
        console.log("init Profile Controller ")
    }

  @Get()
  @Roles(Role.Everyone)
  @ApiOperation({operationId:'getProfile'})
  @ApiResponse({ status:200, type:Object,description:"Success"})
  @ApiResponse({ status:401, type:Object,description:"Undefine profile"})
  async myprofile() {
    const result = await this.profileservice.getProfile()
    if(result){
        return result
    }else{
        // throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);
        throw new HttpException('Forbidden', HttpStatus.FORBIDDEN);
    }
    // console.log(this.userprovider)
    
  }
}
