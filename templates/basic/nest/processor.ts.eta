/**
 * This file was automatically generated by simpleapp generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and regenerate this file.
 * last change 2023-09-23
 * Author: Ks Tan
 */
import { UserContext } from '../commons/user.context'
import * as sharelibs from '../sharelibs'
import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import * as jsonpath from 'jsonpath'
import { Model } from 'mongoose';
import {<%= it.typename%>JsonSchema } from '../jsonschemas/<%= it.doctype %>.jsonschema'
import { SimpleAppService,IsolationType,HookType } from './simpleapp.processor';
import {DocNumberFormatGenerator} from '../commons/docnogenerator.service'
import { <%Object.keys(it.models).forEach(function(key) { %> <%=key %>, <%})%> }  from '../types/<%= it.doctype %>.type';
import { <%Object.keys(it.models).forEach(function(modelname) { %>  Default<%=modelname%>,  <%})%> } from '../defaults/<%= it.doctype %>.default'


<%if(it.jsonschema['x-import-lib']) {%>
  <%let libs = it.jsonschema['x-import-lib'] %>
  <%for(let l = 0; l< libs.length; l++) { %>
      import * as <%=libs[l].importAs %> from '<%=libs[l].importFrom %>'
  <%}%>
<%}%>

@Injectable()
export class <%= it.typename %>Processor extends SimpleAppService<<%= it.typename %>>  {
  protected documentIdentityCode='<%~ it.autocompletecode %>'
  protected documentIdentityLabel='<%~ it.autocompletename %>'
  <%if(it.jsonschema['x-simpleapp-config']['generateDocumentNumber']){%>
  protected withDocNumberFormat = true
  <%}%>

  protected foreignkeys = <%~ JSON.stringify(it.foreignkeys)%>

    constructor(mydoc: Model<<%= it.typename %>>) {
    super('<%= it.doctype.toUpperCase() %>','<%= it.name %>',mydoc,IsolationType.<%=it.isolationtype%>);
    this.setSchema(<%= it.typename%>JsonSchema)
    this.setData(Default<%=it.typename%>(crypto.randomUUID()))
    <%if(it.moreAutoComplete.length>0){%>
    this.addAutoCompleteField({
        <%Object.keys(it.moreAutoComplete).forEach(function(key) { %>
          <% let f=it.moreAutoComplete[key] %>
          <%~ `${f}: '${f}'`   %>,
        <%})%>
      })
    <%}%>
    }
  

   reCalculateValue(data:<%= it.typename %>){
    console.log('trigger new recalculate')    
    const jsopbj= new jsonpath['JSONPath']()
    <% if(it.jsonschema['x-simpleapp-config']['formulas']){ %>
        <%Object.keys(it.jsonschema['x-simpleapp-config']['formulas']).forEach(function(index) { %>
          <% let fml = it.jsonschema['x-simpleapp-config']['formulas'][index] %>
          // <%~ JSON.stringify(fml) %>
          //const tmp = jsopbj.query(vdata,fieldpath).filter((item:string)=>item!='')
          
          jsopbj.apply(data, '<%~ fml.jsonpath %>', function(value:any) { return <%~fml.formula %> });

        <%}) %>
      <%} %>
    
  }


  /***************************** additional execute *****************************************/
    

}
