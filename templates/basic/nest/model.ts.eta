/**
 * This file was automatically generated by simpleapp generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and regenerate this file.
 * last change 2023-09-09
 * Author: Ks Tan
 */

<% const schema = it.schema %>
<% const typeclass = it.doctype+'type' %>
import { Schema } from 'mongoose';
import { <%Object.keys(it.models).forEach(function(key) { %> <%=key %>, <%})%> }  from '../types/<%= it.doctype %>.type';
const schemasetting = {
  
  <%Object.keys(it.schema).forEach(function(key) { %>    
    
    <% if(key == '_id'){%>
      <%= key %>: {type:'string', required:true},  //force _id as string
    <% } else if(typeof schema[key] == 'string') {%>
      <%= key %>: {type: <<%=schema[key]%>>{}, required:false},   //object
    <% }else if( Array.isArray( schema[key])){%>
      <%= key %>: [{type: <<%=schema[key]%>>{}, required:false}],  //custom array
    <% }else if( schema[key].type == 'array'){%>
      <%= key %>: [{type: <%= schema[key].item.type %>, required:false}]  //basic array
    <% }else{%>
      <%= key %>: {type: <%= capitalizeFirstLetter(schema[key].type) %>, required: <% if(key==it.autocompletecode || key==it.autocompletename){%>true<%}else{%>false<%}%>},  //field 
    <% } %>
  <%}) %>
};

export const <%= capitalizeFirstLetter(it.name) %>MongoSchema = new Schema(schemasetting,{collection: '<%= it.name %>'})
<%if(it.requireautocomplete){%>
  <% if(it.doctype=='org') {%>
    .index({tenantId:1,orgId:1},{unique:true})
  <%} else {%>
    .index({<%=it.autocompletecode%>:1,orgId:1},{unique:true})
    .index({<%=it.autocompletename%>:1,orgId:1})
  <%}%>
<%}%>
<%Object.keys(it.foreignkeys).forEach(function(key) { %>

  <%for(let i =0 ; i < it.foreignkeys[key].length; i++){%>
    .index({'<%= it.foreignkeys[key][i].replace('$.','').replaceAll('[*]','') %>':1})
  <%}%>
<%})%>
