<% const skipcolumns = ['_id','createdBy','created','updatedBy','updated','orgId','branchId','tenantId','doctype','docNoFormat'] %>  
<% const getBasicElement = ( inputtype, pathStr, modelValue,subtype=undefined,hidelabel=false,instancepath='') => 
      `<SimpleAppInput :input-type="SimpleAppInputType.${inputtype}"  :setting="o.getField('${pathStr}')" v-model="${modelValue}"`+ 
        (subtype? `type="${subtype}"`:'') +' ' + 
        (hidelabel? ':hidelabel="true"':'') +
        (instancepath ?  `:instancepath="\`${instancepath}\`"` : '') + '/>' %>
<template>    
    
    <SimpleAppForm #default="o" :document="doc">
    <client-only>
        <% if(it.autocompletename){%> 
            <title v-if="id">{{ t(doc.getDocName())}}: {{ data.<%=it.autocompletename%> ?? ''}}</title>
        <%}else{%> 
            <title v-if="id">{{ t(doc.getDocName())}}</title>
        <%}%> 
                
        <SimpleAppFormToolBar  :document="doc" @on="actionListener"></SimpleAppFormToolBar>        
        <div class="grid grid-cols-4 gap-4">
    <% let isautofocus='' %>
     <%Object.keys(it.jsonschema.properties).forEach(function(key) { %>
      
        <% let obj=it.jsonschema.properties[key] %>
        <% if(skipcolumns.indexOf(key)>=0){ %>
        <% } else if(obj.type=='boolean'){ %>
            <%~ getBasicElement('checkbox',`#/properties/${key}`,`data.${key}`) %>
        <% } else if(obj.type=='number' || obj.type=='integer'){ %>
            <%~ getBasicElement('number',`#/properties/${key}`,`data.${key}`) %>            
        <% } else if(obj.type=='array'  && obj.items && obj.items.type =='string' ){ %>              
            <%~ getBasicElement('chip',`#/properties/${key}`,`data.${key}`) %>            
        <% } else if(obj.type=='object'  && typeof obj['x-foreignkey']!='undefined'){ %>              
            <%~ getBasicElement('autocomplete',`#/properties/${key}`,`data.${key}`) %>            
        <% } else if(obj.type=='string'){ %>                 
                <% if(obj.format=='documentno'){ %>
                    <%~ getBasicElement('documentno',`#/properties/${key}`,`data.${key}`) %>                                    
                <% }else if(obj.format=='date'){ %>
                    <%~ getBasicElement('calendar',`#/properties/${key}`,`data.${key}`) %>            
                <% }else if(obj.format=='time'){ %>
                    <%~ getBasicElement('time',`#/properties/${key}`,`data.${key}`) %>      //time      
                <% } else if(obj.format=='text'){ %>
                    <%~ getBasicElement('textarea',`#/properties/${key}`,`data.${key}`) %>            
                <% } else if(obj.format=='html'){ %>
                    <%~ getBasicElement('textarea',`#/properties/${key}`,`data.${key}`) %>            
                <% } else if(obj.format=='email'){ %>
                    <%~ getBasicElement('text',`#/properties/${key}`,`data.${key}`,'email') %>            
                <% } else if(obj.enum){ %>
                    <%~ getBasicElement('select',`#/properties/${key}`,`data.${key}`) %>            
                <% } else if(obj['anyOf']){ %>
                    <% for(let f = 0; f < obj['anyOf'].length; f++){ %>
                        <%if(obj['anyOf'][f]['format']){ %>
                            <%~ getBasicElement('text',`#/properties/${key}`,`data.${key}`,obj['anyOf'][f]['format']) %>            
                        <%}%>
                    <%}%>
                <% } else if(obj['oneOf']){ %>
                    <% for(let f = 0; f < obj['oneOf'].length; f++){ %>
                        <%if(obj['oneOf'][f]['format']){ %>
                            <%~ getBasicElement('text',`#/properties/${key}`,`data.${key}`,obj['oneOf'][f]['format']) %>            
                        <%}%>
                    <%}%>

                <% } else {%>
                        <%~ getBasicElement('text',`#/properties/${key}`,`data.${key}`) %>            
                <% }%>  
        <% } else if(obj.type=='object' && obj.properties){ %>                  
            <SimpleAppValue :setting="o.getField('#/properties/<%= key %>')">
            <%Object.keys(obj.properties).forEach(function(skey) { %>
                <% let sobj=obj.properties[skey] %>
                <% let fieldpath=`#/properties/${key}/properties/${skey}` %>
                <% let fieldpathgetter=`o.getField('${fieldpath}')` %>
                <% let vmodel=`data.${key}.${skey}` %>
                <% let instancePath=`#/${key}/${skey}` %>

                <% if(sobj.type=='boolean'){ %>
                    <%~ getBasicElement('checkbox',fieldpath,vmodel) %>
                <% } else if(sobj.type=='number' || sobj.type=='integer'){ %>
                    <%~ getBasicElement('number',fieldpath,vmodel) %>
                <% } else if(sobj.type=='array'  && sobj.items && sobj.items.type =='string' ){ %>                                  
                    <%~ getBasicElement('chip',fieldpath,vmodel) %>
                <% } else if(sobj.type=='object'  && typeof sobj['x-foreignkey']!='undefined'){ %>              
                    <%~ getBasicElement('chip',fieldpath,vmodel) %>
                <% } else if(sobj.type=='string'){ %>            
                         <% if(sobj.format=='date'){ %>                         
                            <SimpleAppInput :input-type="SimpleAppInputType.calendar" instancePath="<%=instancePath%>" autofocus :setting="<%~fieldpathgetter%>" v-model="<%= vmodel %>"/>  
                        <% } else if(sobj.format=='time'){ %>
                            <SimpleAppText type="<%=sobj.format%>" instancePath="<%=instancePath%>" autofocus :setting="<%~fieldpathgetter%>" v-model="<%= vmodel %>"/>  
                        <% } else if(sobj.format=='text'){ %>
                            <SimpleAppTextarea :setting="<%~fieldpathgetter%>'" instancePath="<%=instancePath%>" v-model="<%= vmodel %>"/>  
                        <% } else if(sobj.format=='html'){ %>
                            <SimpleAppEditor editorStyle="height: 320px" instancePath="<%=instancePath%>" :setting="<%=fieldpathgetter%>" v-model="<%= vmodel %>"/>  
                        <% } else if(sobj.format=='email'){ %>
                            <SimpleAppText  autofocus type="<%=~obj.type%>" instancePath="<%=instancePath%>" :setting="<%=fieldpathgetter%>" v-model="<%= vmodel %>"/>  
                        <% } else if(sobj.enum){ %>
                            <SimpleAppSelect  autofocus :setting="<%~fieldpathgetter%>" instancePath="<%=instancePath%>" v-model="<%= vmodel %>"/>
                        <% } else {%>
                                <SimpleAppText   autofocus :setting="<%~fieldpathgetter%>" instancePath="<%=instancePath%>" v-model="<%= vmodel %>"/>  
                        <% }%> 
                <% } %>
            <%})%>   
            </SimpleAppValue>            
        <% } else if(obj.type=='array' && obj.items && obj.items.type=='object'){%>
            <SimpleAppInputTable  :getField="o.getField" class="col-span-4"
                :setting="o.getField('#/properties/<%=key%>')" v-model="data.<%=key%>">
                    <%let tablefields = Object.keys(obj.items.properties) %>
                    <% for(let a=0;a<tablefields.length;a++){%>
                        <%let col= tablefields[a] %>
                        <% if(skipcolumns.includes(col)){ continue}%> 
                        <%let subobj = obj.items.properties[col] %>
                        <Column field="<%=col%>" #body="{index}" :header="camelCaseToWords('<%=col%>')">                            
                            <%if(subobj['x-foreignkey']){%>
                                <%~ getBasicElement('autocomplete',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                
                            <% } else if(subobj.type=='boolean'){%>
                                <%~ getBasicElement('checkbox',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                
                            <% } else if(subobj.type=='number' || subobj.type=='integer'){%>
                                <%~ getBasicElement('number',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                
                            <%} else if(subobj.type=='string' && subobj.format){%>
                                <%~ getBasicElement(subobj.format,`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,subobj.format,true,`/${key}/\${index}/${col}`) %>                                
                            <%} else if(subobj.type=='string' && subobj['enum']){%>  
                                <%~ getBasicElement('select',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                      
                             <%} else if(subobj.type=='string' ){%>        
                                <%~ getBasicElement('text',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                                                      
                            <%} else if(subobj.type=='number'){%>
                                <%~ getBasicElement('number',`#/properties/${key}/items/properties/${col}`,`data.${key}[index].${col}`,undefined,true,`/${key}/\${index}/${col}`) %>                                                                      
                            <%}%>
                        </Column>                        
                    <%}%>
                    <Column #body="{index}" header="Delete">
                            <Button class="btn-danger" type="button" @click="data.<%=key%>.splice(index,1)">X</Button>
                        </Column>
            </SimpleAppInputTable>
        <% } else{%>
            <!-- Can auto generate <%=obj.key %> -->  
            <!--  <%~ JSON.stringify(obj) %>-->  
        <%}%>
      <%})%>  
      </div>
    </client-only>
    </SimpleAppForm>
    <DebugDocumentData v-model="data" :label="doc.getDocName()"/>
</template>


<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and 
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */
 import { SimpleAppInputType } from "~/types";
 
 const props = defineProps<{ _id?: string}>();
 const doc = useNuxtApp().$<%= it.typename %>Doc()
 const data = doc.getReactiveData(); 
 const emits = defineEmits(["after"]);
 const id = computed(() => props._id ?? "");

/************ start default methods ****************/

const newData = () =>  doc.setNew()
const createData = async () => await doc.create()
const updateData = async () => await doc.update()
const deleteData = async () => await doc.delete(data.value._id ?? "")

const getRecord = async () => {
  if(id.value && id.value != 'new'){
    await doc.getById(id.value)
  }else{
      newData()
    } 
}

getRecord()
watch(id,async ()=>getRecord())
/************ end default methods ****************/


const actionListener = async (actionName: string) => {
  
  let result 
  switch (actionName) {
    case "create":
      result =await createData()
      break;
    case "update":
      result = await updateData();
      break;
    case "delete":
      result =await deleteData()
      break;
    case "new":
      result =await newData();
      break;
    case "mount":
      break;
  }
  
  emits('after',actionName,data.value,doc,result)  
};
onMounted(async ()=> await actionListener('mount'))

/************ start api methods ****************/

<%for(let i=0;i<it.apiSettings.length;i++){%>
  <% let api = it.apiSettings[i] %>
    const run<%=capitalizeFirstLetter(api.action)%> = async () =>{

        const data = {
            id: id.value
        }
        const result = await doc.run<%=capitalizeFirstLetter(api.action)%>(
             <% if(api.entryPoint && api.entryPoint.includes(':')) {%>
                <%let subpath = api.entryPoint.split('/')%>
                <% for(let a=0;a<subpath.length;a++){%>
                    <%const partstr = subpath[a]%>
                    <%if(partstr.includes(':')){%>
                    <% const paraname = partstr.replace(':','') %>  
                    <%= paraname=='id' ? 'id.value' : paraname %>,
                    <%}%>    
                <%}%>  
            <%}%>
            data
        )
        
    }
<%}%>
/************ end api methods ****************/

</script>