<script setup lang="ts">
/**
 * This file was automatically generated by simpleapp everytime regenerate code.
 * delete file "delete-me-for-avoid-override" if you want to modify this file and 
 * prevent regenerate code override it.
 * last change 2023-09-09
 * author: Ks Tan
 */
<% const skipcolumns = ['_id','createdby','created','updatedby','updated','orgId','branchId','tenantId','doctype'] %>  
  //import {InputTableColumnType,InputTableColumn} from "~/components/type";
  import Column from "primevue/column";
  import MultiTextRender from '~/components/renderers/MultiTextRender.vue'
    import BooleanRender from '~/components/renderers/BooleanRender.vue'
    import DateRender from '~/components/renderers/DateRender.vue'
    import ForeignKeyRender from '~/components/renderers/ForeignKeyRender.vue'

  const {$<%= it.typename %>Doc } = useNuxtApp();
  const doc = $<%= it.typename %>Doc()
  const data = doc.getReactiveData();
  const visible = ref(false)

definePageMeta({
  name: '<%= it.typename %>',
  layout:'documentlist',
  documentName: '<%= it.typename.toLowerCase() %>',
  columns: [<%Object.keys(it.jsonschema.properties).forEach(function(key) { %>
        <%let obj=it.jsonschema.properties[key] %>
        <%if(skipcolumns.indexOf(key)>=0){%>/* skip system columns <%=key%>*/
        <%} else if(['string','number','integer'].indexOf(obj.type)>=0){%>'<%=key%>',
        <%} else if(obj.type =='object' && obj['x-foreignkey'] ){%>
            { 
              title:'<%=capitalizeFirstLetter(key)%>', 
              field:'<%=key%>',
              component:ForeignKeyRender,
              componentSetting:{collection:'<%=key%>' }
            },
        <%}%>
    <%})%>],
  sorts:[
    <%if(it.jsonschema['x-simpleapp-config'] && it.jsonschema['x-simpleapp-config']['uniqueKey']){%>
        ['<%=it.jsonschema['x-simpleapp-config']['uniqueKey']%>','asc'],
    <%}%>

    ]
});

const newData = () => {  
        doc.setNew()        
        goTo(doc.getDocName(),'new')
        visible.value=true
    };
    

const exitRecord = ()=>{
        goTo(doc.getDocName())
        console.log("exitRecord")
    }

watch(()=> useRoute().fullPath ,(newvalue,oldvalue)=>{
  visible.value =  useRoute().params.id ? true : false
})

onNuxtReady(()=>{
  visible.value = useRoute().params.id ? true : false;
})
</script>
<template>
   <div>
    <Button class="bg-primary-600 hover:bg-primary-400 text-white"  v-if="canPerform(String(useRoute().meta.name),'create')" @click="newData">New</Button>    
    <Dialog v-model:visible="visible"
                :pt="{root:{class:'w-full h-full bg-white'}}"  
                modal :header="doc.getDocName()" 
                :autoZIndex="false" 
                @update:visible="exitRecord"                
                >                 
                <NuxtPage />
        </Dialog>
    <!--  -->
  </div>
</template>

  