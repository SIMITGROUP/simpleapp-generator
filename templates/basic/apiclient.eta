/**
 * This file was automatically generated by simpleapp generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and regenerate this file.
 */
import { API_BASE_URL } from '../config';
import { SimpleAppClient } from '../lib/SimpleAppClient';
// import { JSONSchema7 } from 'json-schema';
import { Configuration,
      <%= it.doctype.toUpperCase()%>Api, 
      <%= it.typename%> ,
      <%Object.keys(it.schema).forEach(function(key){%>              
        <% if(typeof it.schema[key]=='string'){%><%= it.schema[key]  %>,<%}%>
      <%})%>

    } from '../openapi';



export class <%= it.typename%>Doc extends SimpleAppClient<<%= it.typename%>,<%= it.doctype.toUpperCase()%>Api>{
  public readonly schema= <%~ JSON.stringify(it.jsonschema) %>;

  constructor() {    
    const apiconfig = new Configuration({ basePath: API_BASE_URL });
    const apiobj = new <%= it.doctype.toUpperCase()%>Api(apiconfig)
    super(apiobj)
    
    this.setNew();    
  }
  setNew = ()=>{
    const newdata =  {
        
        <%Object.keys(it.schema).forEach(function(key){%>      
          <%let field=it.schema[key]%>      
          <% if(typeof field=='string'){%>
            <%=key%> : <<%= field  %>>{},
          <%} else if(field.type=='string'){%>
              <%=key%> : '<%= field.default  %>',
            <%} else if(Array.isArray(field)) {%>
              <%=key%> : [],  //typeof field == array        
            <%} else {%>
              <%=key%> : <%=field.default%>,  //else <%= typeof field %>
          <%}%>
        <%})%>
            }
            this.setData(newdata)
    }

  /*****************************customized frontend + backend code*****************************************/
  
  
  <%~ it.bothEndCode %>

  /*****************************customized frontend only code*****************************************/

  <%~ it.frontEndCode %>
  }
