/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR Except content between:
 *    <begin-bothend-code><end-bothend-code>
 *    <begin-backend-code><end-backend-code>
 * last change 2023-09-09
 * Author: Ks Tan
 */
import { UserProvider } from '../../class/UserProvider'
import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import {<%= it.typename%>JsonSchema } from './<%= it.doctype %>.jsonschema'
import { SimpleAppService,IsolationType,HookType } from '../../class/SimpleAppService';
import { <%Object.keys(it.models).forEach(function(key) { %> <%=key %>, <%})%> }  from './<%= it.doctype %>.type';


@Injectable()
export class <%= it.typename %>Service extends SimpleAppService<<%= it.typename %>> {
  protected documentIdentityCode='<%~ it.autocompletecode %>'
  protected documentIdentityName='<%~ it.autocompletename %>'
    constructor(@InjectModel('<%= it.name %>')  mydoc: Model<<%= it.typename %>>,
  ) {
    super('<%= it.doctype %>','<%= it.name %>',mydoc,IsolationType.<%=it.isolationtype%>);
    this.setSchema(<%= it.typename%>JsonSchema)
    
    <%if(it.moreAutoComplete.length>0){%>
    this.addAutoCompleteField({
        <%Object.keys(it.moreAutoComplete).forEach(function(key) { %>
          <% let f=it.moreAutoComplete[key] %>
          <%~ `${f}: '${f}'`,   %>
        <%})%>
      })
    <%}%>
    
  }

  /***************************** x-document-api definations *****************************************/

  <%for(let i=0;i<it.apiSettings.length;i++){%>
  <% let api = it.apiSettings[i] %>
  async exec<%=capitalizeFirstLetter(api.action)%>(id:string){
    <%if(api.bpmn!==undefined){%>
    return await this.executeWorkFlow(id,"<%=api.bpmn%>","<%=api.setDocumentStatus%>")
    <%}else if (api.setDocumentStatus !== undefined){%>
    return await this.setDocumentStatus(id,'<%=api.setDocumentStatus%>')
    <%}else {%>
      return Promise.resolve("unknown action")
    <%}%>
    
  } 
  <%}%>

  /*****************************customized frontend + backend code*****************************************/
    
  <%~ it.bothEndCode %>

  /*****************************customized backend only code*****************************************/
  
  <%~ it.backEndCode %>  

}
