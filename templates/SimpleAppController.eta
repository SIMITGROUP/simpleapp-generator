import {
  Controller,
  Get,
  Put,
  Post,
  Delete,
  Body,
  Param,
  Type,
} from '@nestjs/common';
import { ApiTags, ApiBody, ApiResponse, ApiOperation } from '@nestjs/swagger';

const doctype = 'person'.toUpperCase();
type ServiceType = {
  list: Function;
  create: Function;
  update: Function;
  delete: Function;
  findById: Function;
  findIdThenDelete: Function;
  findIdThenUpdate: Function;
  setData: Function;
};

// @ApiTags(doctype)
// @Controller(doctype.toLowerCase())
export class SimpleAppController<TService extends ServiceType, TApiSchema, T> {
  protected service: TService;
  protected tryno: number;
  //   protected apiSchemaClass=

  constructor(service: TService) {
    this.service = service;
  }

  
  async _list() {
    return this.service.list();
  }
  
  async _findOne(id: string) {
    const result = (await this.service.findById(id)) as TApiSchema;

    return result as Type<TApiSchema>;
  }

  
  async _create(data: TApiSchema) {
    //const newdata: persontype.Person = { ...data };
    const newdata: T = {} as T; //= { ...data };
    Object.assign(newdata, data); //
    return this.service.setData(newdata).create() as TApiSchema;
  }

  
  async _update( id: string,data: TApiSchema) {
    const newdata: T = {} as T; //= { ...data };
    Object.assign(newdata, data); //
    return this.service.findIdThenUpdate(id, newdata) as TApiSchema;
  }

 
  async _delete(id: string) {
    return this.service.findIdThenDelete(id);
  }
}
